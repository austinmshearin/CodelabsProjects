To install angular globally
>>> npm install -g @angular/cli@latest

To create an Angular project
>>> ng new <project-name>
Optional flag to set non strict mode: --no-strict
angular routing? n
style sheet? CSS

To bring up a development server from the angular project directory
>>> ng serve

To load bootstrap into the project as a module
>>> npm install --save bootstrap@3

To load bootstrap into the angular project to be used for CSS
1) Open the angular.json file
2) Add another entry to the "styles" array for bootstrap: "node_modules/bootstrap/dist/css/bootstrap.min.css"

To add a component
>>> ng g c <component-name>
g is short for generate
c is short for component

The main index.html is what is served with the app-root container
The app.module.ts file configures the module which contains all of the components
    Each component in the module must be imported and declared
The app.component populates the app-root container
    The *.component.ts file configures the component
    The *.component.html file is the template html
    The *.component.css file styles the component
Each sub component should go in a subdirector within the app directory

Interpolation
{{}} used to insert data into the HTML
Can be properties from the typescript class {{property}} or a method {{method()}}
Must return a string

Property binding
Wrap the property with square brackets to bind it to an expression
[disabled] = "property" disables an HTML element if property in the typescript class is true or method returns true

Event binding
Wrap an event with parenthesis and assign it a method from the typescript class
(click)="method()"

Two way binding
Binds an input value to the property value
[(ngModel)] = "property"

*ngIf
Used to control if something exists on the DOM or not
<p *ngIf="property"></p>

ngStyle
Dynamically assign styles based on conditions
[ngStyle] = "{property: condition}"

ngClass
Dynamically add or remove classes
[ngClass] = "{CSSClassName: condition}"

ngFor
Dynamically create more components using a for loop
*ngFor = "let name of names"